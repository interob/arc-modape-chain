// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.158.0/containers/python-3
{
    "name": "ARC MODAPE CHAIN Container",
    "dockerComposeFile": "docker-compose.development.yml",
    "service": "arc_modape_chain",
    "initializeCommand": "sed -e \"s/{{user}}/$(id -un)/ig\" -e \"s#{{dockerfile}}#$(pwd)/.devcontainer/Dockerfile#ig\" ./src/development/vscode/.devcontainer/docker-compose.development.yml > ./.devcontainer/docker-compose.development.yml && cat ./src/docker/Dockerfile > ./.devcontainer/Dockerfile && sed -e \"s/{{user}}/$(id -un)/ig\" ./src/development/vscode/.devcontainer/Dockerfile.development >> ./.devcontainer/Dockerfile",
    // ^ Initialization does:
    //     1. Prepare docker-compose.development.yml for current user in .devcontainer subfolder
    //     2. Append Development stage to Production Dockerfile, output in .devcontainer subfolder
    "updateRemoteUserUID": true,

    "workspaceFolder": "/arc-modape-chain",
    "postCreateCommand": "PIP_ROOT_USER_ACTION=ignore sudo pip --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org install --upgrade pip && cd /arc-modape-chain/modape && PIP_ROOT_USER_ACTION=ignore sudo pip --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org install -e . && cd /arc-modape-chain/src && PIP_ROOT_USER_ACTION=ignore sudo pip --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org install -e .[dev]",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "eamodio.gitlens",
                "ms-python.vscode-pylance",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-azuretools.vscode-docker"
            ],
            "settings": {
                "terminal.integrated.env.linux": {
                    "PYTHONPATH": "${workspaceFolder}"
                },
                "editor.tabSize": 4,
                "editor.insertSpaces": true,
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit",
                    "source.fixAll": "explicit" 
                },
                "html.validate.scripts": false,
                "json.format.enable": true,
                "editor.defaultFormatter": "ms-python.black-formatter",
                "black-formatter.args": [
                    "--line-length=100"
                ],
                "isort.args": ["--profile=black"]
            }
        }
    }
}
